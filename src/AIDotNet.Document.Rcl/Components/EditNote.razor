@inject IFileStorageService fileStorageService
@inject IFolderService folderService

<style>
    .node-title {
        font-size: 25px;
        padding-top: 50px;
        margin-left: 20px;
    }

    .ql-container.ql-snow {
        border: none;
    }

    .ql-toolbar.ql-snow {
        border-bottom: 1px solid #F0F3F5;
        border-top: 1px solid #F0F3F5;
    }

    .ql-editor {
        height: calc(100vh - 180px);
        overflow: auto;
    }
    
    .name-input{
        font-size: 25px;
        width: 100%;
        background-color: transparent;
        outline: none;
        border: none;
    }
</style>

<div style="height: 100%;width: 100%;">
    <div style="width: 100%;height: 110px;">
        <div class="node-title" style="display: flex; justify-content: space-between;-webkit-app-region:drag" @ondblclick="() => IsEditName = true">
            <div>
                @if (!IsEditName)
                {
                    @Value.Name
                }
                else
                {
                    <input type="text" autofocus class="name-input" @bind="Value.Name" @onblur="Blur"/>
                }
            </div>

            <div>

                <MMenu Right
                       Bottom>
                    <ActivatorContent>
                        <MButton Style="margin-right: 8px;" Text XSmall Fab @attributes="@context.Attrs">
                            <MIcon>mdi-dots-vertical</MIcon>
                        </MButton>
                    </ActivatorContent>
                    <ChildContent>
                        <MList Class="d-m-list">
                            <MButton Small OnClick="Vector" Text Class="d-list-item" Disabled="_value.Status == VectorStatus.Processing">
                                向量
                            </MButton>
                            <MDivider></MDivider>
                        </MList>
                    </ChildContent>
                </MMenu>
            </div>
        </div>
    </div>
    @if (Value.Type == FolderType.Note)
    {
        <DEditor @ref="DeditorRef" BeforeAllUploadAsync="BeforeAllUploadAsync" Style="height: 100%;width: 100%;" @bind-Value="Content" Markdown ContentStyle="height:100%;">
        </DEditor>
    }
    else
    {
        <MMarkdown  BeforeAllUpload="HandleUploadAsync" @ref=MMarkdownRef @bind-Value="Content"  Options="_options" Style="height: 100%;">
        </MMarkdown>
    }
</div>