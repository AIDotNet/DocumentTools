@if (NavMenu.IsDivider)
{
    <MDivider Class=@($"my-{NavMenu.DivNumber}") />
}
else
{
    <MTooltip Right=true Context="tipContext" Disabled=!Mini>
        <ActivatorContent>
            <MListItem @attributes=tipContext.Attrs
                       Class="@(Mini?"px-1":"pl-4")"
                       Dense=Dense Href="@NavMenu.Href"
                       Link=true Style="min-height:32px" ActiveClass="@(Mini?ActiveClass:ActiveClass)">
                <ItemContent>
                    @if (false)
                    {
                        <MIcon Class=@GetClass(context.Active) Icon="NavMenu.Icon" />
                    }
                    else
                    {
                        <MListItemIcon Class="@(Mini?"ma-auto":"my-auto")">
                            <MIcon Class="mx-auto">@NavMenu.Icon</MIcon>
                        </MListItemIcon>
                        <MListItemContent>
                            <MListItemTitle>@NavMenu.Title</MListItemTitle>
                        </MListItemContent>
                    }
                </ItemContent>
            </MListItem>
        </ActivatorContent>
        <ChildContent>
            @NavMenu.Title
        </ChildContent>
    </MTooltip>

}


@code {
    [Parameter, EditorRequired]
    public MenuItem NavMenu { get; set; } = null!;

    [Parameter]
    public bool Dense { get; set; }

    [Parameter]
    public bool Mini { get; set; }

    [Parameter]
    public string ActiveClass { get; set; }

    string? GetColor(bool active) => active ? ActiveClass : null;
    string GetClass(bool active) => string.Join(" ", "mx-auto", GetColor(active));
}